Whats what in the cfn.

Language generated by cfn contains these ast node types:
  lambda
  let
  if
  case   -- restriction: all patterns must be either literals or
                         a constructor with var and wildcard args
  app
  var-ref
  con-ref
  const
  con-number
  sel
  is-constructor

Transformations to do:
  Convert lists to explicit calls to cons
  Simplify patterns
  Remove sequences
  Remove list comprehensions
  Remove sections
  Reduce patterns on lhs of decls
  Reduce patterns in function args
  Convert where decls to let statements
  Convert guarded-expressions to if - then - else form

Done earlier:
  signdecls are removed in scoping
  exp-signs are removed in typechecker
  prec parser removes `negate' & pp-* nodes




